title: TLDR: Dependências Dev Python no Ubuntu
---
pub_date: 2018-06-19
---
summary: Configure as principais dependencias externas de um ambiente de desenvolvimento python no Ubuntu
---
body:

Algumas bibliotecas do python como a que usamos para conversar um banco **SQLite** são na prática um **encapsulamento de um binário externo**. Nestes casos precisamos que eles estejam instalados em nosso sistema operacional para que determinado pacote python funcione.

Quando isso acontece, recebemos erros como este:

```shell
ImproperlyConfigured: Error loading either pysqlite2 or sqlite3 modules (tried in that order): No module named _sqlite3
```

Para resolver estes problemas basta instalar esta dependência externa que normalmente o sistema já reconfigura tudo para você, mas para quem trabalha múltiplas versões do python e com [pyenv](https://github.com/pyenv/pyenv) é preciso recompilar todas as versões do python toda vez que lembra de uma dependência externa.

![e lá vamos nós](e-la-vamos-nos.gif)

Para não sofrer com este problema, após instalar o sistema operacional e antes de preparar o ambiente de desenvolvimento eu já instalo as principais dependências que costumo utilizar:

```shell
$ sudo apt-get install build-essential python-dev python3-dev libncursesw5-dev libsqlite3-dev libreadline-dev libbz2-dev libssl-dev libgdbm-dev zlib1g-dev libjpeg-dev libpq-dev libxml2-dev libxslt1-dev
```

!!!! Este comando foi testado no **Ubuntu 18.04**, os nomes dos pacotes podem mudar de uma versão para outra.
---
share_image: python-ubuntu.jpg
